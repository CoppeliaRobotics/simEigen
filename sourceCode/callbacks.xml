<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<?xml-stylesheet type="text/xsl" href="callbacks.xsl"?>

<plugin name="simEigen" author="federico.ferri.it@gmail.com">
    <description></description>
    <command name="mtxAdd">
        <description>Performs addition of the two matrices in place (writes result to first matrix).</description>
        <params>
            <param name="handle" type="string"></param>
            <param name="handle2" type="string"></param>
        </params>
        <return>
        </return>
    </command>
    <command name="mtxAddK">
        <description>Performs addition of matrix and scalar in place (writes result to matrix).</description>
        <params>
            <param name="handle" type="string"></param>
            <param name="k" type="double"></param>
        </params>
        <return>
        </return>
    </command>
    <command name="mtxBlock">
        <description>Block of size (p,q), starting at (i,j). Indices start at 0. Returns a new matrix.</description>
        <params>
            <param name="handle" type="string"></param>
            <param name="i" type="int" default="0"></param>
            <param name="j" type="int" default="0"></param>
            <param name="p" type="int" default="-1"></param>
            <param name="q" type="int" default="-1"></param>
        </params>
        <return>
            <param name="handle" type="string"></param>
        </return>
    </command>
    <command name="mtxBlockAssign">
        <description>Assign matrix 2 to block of size (p,q), starting at (i,j). Indices start at 0. Operates in place.</description>
        <params>
            <param name="handle" type="string"></param>
            <param name="handle2" type="string"></param>
            <param name="i" type="int" default="0"></param>
            <param name="j" type="int" default="0"></param>
            <param name="p" type="int" default="-1"></param>
            <param name="q" type="int" default="-1"></param>
        </params>
        <return>
        </return>
    </command>
    <command name="mtxCopy">
        <description>Return a new matrix, copy of this one.</description>
        <params>
            <param name="handle" type="string"></param>
        </params>
        <return>
            <param name="handle" type="string"></param>
        </return>
    </command>
    <command name="mtxDestroy">
        <description>Destroy the matrix.</description>
        <params>
            <param name="handle" type="string"></param>
        </params>
        <return>
        </return>
    </command>
    <command name="mtxGetCol">
        <description>Get a column of this matrix. Indices start at 0.</description>
        <params>
            <param name="handle" type="string"></param>
            <param name="j" type="int"></param>
        </params>
        <return>
            <param name="data" type="table" item-type="double"></param>
        </return>
    </command>
    <command name="mtxGetData">
        <description>Return matrix data, in row-major order.</description>
        <params>
            <param name="handle" type="string"></param>
        </params>
        <return>
            <param name="data" type="table" item-type="double"></param>
        </return>
    </command>
    <command name="mtxGetItem">
        <description>Get an item of this matrix. Indices start at 0.</description>
        <params>
            <param name="handle" type="string"></param>
            <param name="i" type="int"></param>
            <param name="j" type="int"></param>
        </params>
        <return>
            <param name="data" type="double"></param>
        </return>
    </command>
    <command name="mtxGetRow">
        <description>Get a row of this matrix. Indices start at 0.</description>
        <params>
            <param name="handle" type="string"></param>
            <param name="i" type="int"></param>
        </params>
        <return>
            <param name="data" type="table" item-type="double"></param>
        </return>
    </command>
    <command name="mtxGetSize">
        <description>Return matrix size.</description>
        <params>
            <param name="handle" type="string"></param>
        </params>
        <return>
            <param name="rows" type="int"></param>
            <param name="cols" type="int"></param>
        </return>
    </command>
    <command name="mtxMaxCoeff">
        <description>Compute max coeff. of elements of this matrix.</description>
        <params>
            <param name="handle" type="string"></param>
        </params>
        <return>
            <param name="result" type="double"></param>
        </return>
    </command>
    <command name="mtxMean">
        <description>Compute mean of elements of this matrix.</description>
        <params>
            <param name="handle" type="string"></param>
        </params>
        <return>
            <param name="result" type="double"></param>
        </return>
    </command>
    <command name="mtxMinCoeff">
        <description>Compute min coeff. of elements of this matrix.</description>
        <params>
            <param name="handle" type="string"></param>
        </params>
        <return>
            <param name="result" type="double"></param>
        </return>
    </command>
    <command name="mtxMul">
        <description>Performs multiplication of the two matrices in place (writes result to first matrix).</description>
        <params>
            <param name="handle" type="string"></param>
            <param name="handle2" type="string"></param>
        </params>
        <return>
        </return>
    </command>
    <command name="mtxMulK">
        <description>Performs multiplication of matrix and scalar in place (writes result to matrix).</description>
        <params>
            <param name="handle" type="string"></param>
            <param name="k" type="double"></param>
        </params>
        <return>
        </return>
    </command>
    <command name="mtxNew">
        <description>Create a new matrix. If initialData is specified, fill the matrix with specified data.</description>
        <params>
            <param name="rows" type="int"></param>
            <param name="cols" type="int"></param>
            <param name="initialData" type="table" item-type="double" default="{}"></param>
        </params>
        <return>
            <param name="handle" type="string"></param>
        </return>
    </command>
    <command name="mtxNorm">
        <description>Compute norm of this matrix.</description>
        <params>
            <param name="handle" type="string"></param>
        </params>
        <return>
            <param name="result" type="double"></param>
        </return>
    </command>
    <command name="mtxPInv">
        <description>Pseudo-inverse. See https://eigen.tuxfamily.org/dox/classEigen_1_1CompleteOrthogonalDecomposition.html#ab5e8b3f2c7b602772e1f1d7ce63d446e for details.</description>
        <params>
            <param name="m" type="string">
                <description>input matrix</description>
            </param>
            <param name="b" type="string" nullable="true" default="nil">
                <description>an optional vector to compute pinv(m)*b, which is more stable and efficient than right-multiplying the result by b</description>
            </param>
            <param name="damping" type="double" default="0">
                <description>damping factor. if > 0 then it will return m'*(m*m'+damping^2*I)^-1</description>
            </param>
        </params>
        <return>
            <param name="m" type="string">
                <description>pseudo-inverse of input matrix</description>
            </param>
            <param name="x" type="string" nullable="true">
                <description>the result of pinv(m)*b if b has been specified</description>
            </param>
        </return>
    </command>
    <command name="mtxProd">
        <description>Compute product of elements of this matrix.</description>
        <params>
            <param name="handle" type="string"></param>
        </params>
        <return>
            <param name="result" type="double"></param>
        </return>
    </command>
    <command name="mtxSetCol">
        <description>Set a column of this matrix. Indices start at 0.</description>
        <params>
            <param name="handle" type="string"></param>
            <param name="j" type="int"></param>
            <param name="data" type="table" item-type="double"></param>
        </params>
        <return>
        </return>
    </command>
    <command name="mtxSetData">
        <description>Set data of this matrix.</description>
        <params>
            <param name="handle" type="string"></param>
            <param name="data" type="table" item-type="double"></param>
        </params>
        <return>
        </return>
    </command>
    <command name="mtxSetItem">
        <description>Set an item of this matrix. Indices start at 0.</description>
        <params>
            <param name="handle" type="string"></param>
            <param name="i" type="int"></param>
            <param name="j" type="int"></param>
            <param name="data" type="double"></param>
        </params>
        <return>
        </return>
    </command>
    <command name="mtxSetRow">
        <description>Set a row of this matrix. Indices start at 0.</description>
        <params>
            <param name="handle" type="string"></param>
            <param name="i" type="int"></param>
            <param name="data" type="table" item-type="double"></param>
        </params>
        <return>
        </return>
    </command>
    <command name="mtxSquaredNorm">
        <description>Compute squared norm of this matrix.</description>
        <params>
            <param name="handle" type="string"></param>
        </params>
        <return>
            <param name="result" type="double"></param>
        </return>
    </command>
    <command name="mtxSub">
        <description>Performs subtraction of the two matrices in place (writes result to first matrix).</description>
        <params>
            <param name="handle" type="string"></param>
            <param name="handle2" type="string"></param>
        </params>
        <return>
        </return>
    </command>
    <command name="mtxSubK">
        <description>Performs subtraction of matrix and scalar in place (writes result to matrix).</description>
        <params>
            <param name="handle" type="string"></param>
            <param name="k" type="double"></param>
        </params>
        <return>
        </return>
    </command>
    <command name="mtxSum">
        <description>Compute sum of elements of this matrix.</description>
        <params>
            <param name="handle" type="string"></param>
        </params>
        <return>
            <param name="result" type="double"></param>
        </return>
    </command>
    <command name="mtxSVD">
        <description>SVD decomposition. See https://eigen.tuxfamily.org/dox/classEigen_1_1JacobiSVD.html for details.</description>
        <params>
            <param name="m" type="string">
                <description>input matrix</description>
            </param>
            <param name="computeThinU" type="bool" default="true">
                <description></description>
            </param>
            <param name="computeThinV" type="bool" default="true">
                <description></description>
            </param>
            <param name="b" type="string" nullable="true" default="nil">
                <description>an optional vector to solve for x the system m*x=b</description>
            </param>
        </params>
        <return>
            <param name="s" type="string">
                <description>singular values as a m-by-1 matrix</description>
            </param>
            <param name="u" type="string">
                <description>U matrix (left singular vectors)</description>
            </param>
            <param name="v" type="string">
                <description>V matrix (right singular vectors)</description>
            </param>
            <param name="x" type="string" nullable="true">
                <description>the x solution if b has been specified</description>
            </param>
        </return>
    </command>
    <command name="mtxTrace">
        <description>Compute trace of this matrix.</description>
        <params>
            <param name="handle" type="string"></param>
        </params>
        <return>
            <param name="result" type="double"></param>
        </return>
    </command>
    <command name="mtxTranspose">
        <description>Transpose this matrix in place.</description>
        <params>
            <param name="handle" type="string"></param>
        </params>
    </command>
    <command name="mtxTransposed">
        <description>Return a transposed version of this matrix.</description>
        <params>
            <param name="handle" type="string"></param>
        </params>
        <return>
            <param name="handle" type="string"></param>
        </return>
    </command>
    <!-- OLD FUNCTIONS: -->
    <command name="svd">
        <description>SVD decomposition. See https://eigen.tuxfamily.org/dox/classEigen_1_1JacobiSVD.html for details.</description>
        <params>
            <param name="m" type="grid" item-type="double" size="*,*">
                <description>input matrix</description>
            </param>
            <param name="computeThinU" type="bool" default="true">
                <description></description>
            </param>
            <param name="computeThinV" type="bool" default="true">
                <description></description>
            </param>
            <param name="b" type="grid" item-type="double" size="*,*" nullable="true" default="nil">
                <description>an optional vector to solve for x the system m*x=b</description>
            </param>
        </params>
        <return>
            <param name="s" type="grid" item-type="double" size="*,1">
                <description>singular values as a m-by-1 matrix</description>
            </param>
            <param name="u" type="grid" item-type="double" size="*,*">
                <description>U matrix (left singular vectors)</description>
            </param>
            <param name="v" type="grid" item-type="double" size="*,*">
                <description>V matrix (right singular vectors)</description>
            </param>
            <param name="x" type="grid" item-type="double" size="*,1" nullable="true">
                <description>the x solution if b has been specified</description>
            </param>
        </return>
    </command>
    <command name="pinv">
        <description>Pseudo-inverse. See https://eigen.tuxfamily.org/dox/classEigen_1_1CompleteOrthogonalDecomposition.html#ab5e8b3f2c7b602772e1f1d7ce63d446e for details.</description>
        <params>
            <param name="m" type="grid" item-type="double" size="*,*">
                <description>input matrix</description>
            </param>
            <param name="b" type="grid" item-type="double" size="*,1" nullable="true" default="nil">
                <description>an optional vector to compute pinv(m)*b, which is more stable and efficient than right-multiplying the result by b</description>
            </param>
            <param name="damping" type="double" default="0">
                <description>damping factor. if > 0 then it will return m'*(m*m'+damping^2*I)^-1</description>
            </param>
        </params>
        <return>
            <param name="m" type="grid" item-type="double" size="*,*">
                <description>pseudo-inverse of input matrix</description>
            </param>
            <param name="x" type="grid" item-type="double" size="*,1" nullable="true">
                <description>the result of pinv(m)*b if b has been specified</description>
            </param>
        </return>
    </command>
</plugin>
